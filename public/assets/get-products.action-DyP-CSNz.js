import{_ as d,o as n,c as i,a as o,d as c,e as a,k as l,l as p,m as u,p as g}from"./index-CUPTKQO2.js";import{g as _}from"./get-product-image.action-BkV5yg8A.js";const h={},f={width:"20px",height:"20px",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},w=o("g",{id:"SVGRepo_bgCarrier","stroke-width":"0"},null,-1),b=o("g",{id:"SVGRepo_tracerCarrier","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),m=o("g",{id:"SVGRepo_iconCarrier"},[o("path",{d:"M15 6L9 12L15 18",stroke:"#fff","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"})],-1),k=[w,b,m];function $(r,e){return n(),i("svg",f,k)}const x=d(h,[["render",$]]),y={},v={width:"20px",height:"20px",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},C=o("g",{id:"SVGRepo_bgCarrier","stroke-width":"0"},null,-1),R=o("g",{id:"SVGRepo_tracerCarrier","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),V=o("g",{id:"SVGRepo_iconCarrier"},[o("path",{d:"M9 6L15 12L9 18",stroke:"#ffffff","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"})],-1),B=[C,R,V];function S(r,e){return n(),i("svg",v,B)}const A=d(y,[["render",S]]),G={class:"flex justify-center py-10 bg-gray-100 space-x-3"},j=["disabled"],L=o("span",null,"Anteriores",-1),q=["disabled"],M=o("span",null,"Siguientes",-1),E=c({__name:"ButtonPagination",props:{page:{},hasMoreData:{type:Boolean}},setup(r){return(e,t)=>(n(),i("div",G,[o("button",{disabled:e.page===1,onClick:t[0]||(t[0]=s=>e.$router.push({query:{page:e.page-1}})),class:"flex items-center space-x-1.5 rounded-lg px-4 py-1.5 text-white bg-blue-500 disabled:bg-gray-300 hover:bg-blue-600 transition-all"},[a(x),L],8,j),o("button",{disabled:e.hasMoreData,onClick:t[1]||(t[1]=s=>e.$router.push({query:{page:e.page+1}})),class:"flex items-center space-x-1.5 rounded-lg px-4 py-1.5 text-white bg-blue-500 disabled:bg-gray-300 hover:bg-blue-600 transition-all"},[M,a(A)],8,q)]))}}),I=()=>{const r=u(),e=l(Number(r.query.page||1));return p(()=>r.query.page,t=>{e.value=Number(t||1),window.scrollTo({top:0,behavior:"smooth"})}),{page:e}},D=async(r=1,e=10)=>{try{const{data:t}=await g.get(`products?limit=${e}&offset=${(r-1)*e}`);return t.map(s=>({...s,images:s.images.map(_)}))}catch(t){throw console.log(t),new Error("Error getting products")}};export{E as _,D as g,I as u};
